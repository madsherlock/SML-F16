%% Running time plots, based on old data, that shouldn't be recollected.
% Data generated by test-k-NN-runningTime-vs-DPI-k-n.R
% This data is in the following files:
% '../data/runningTimekNN-2-2-sig1.5-DPI100.csv'
% '../data/runningTimekNN-2-2-sig2.5-DPI200.csv'
% '../data/runningTimekNN-2-2-sig3.5-DPI300.csv'
% The data is old and based on the old type of preprocessing,
% but still accurately reflects k-NN prediction running times.
close all;
runningTimeKNN
figure(1);
print('plots/knn-runningTimeVsKVSN-G2M2-dpi100.eps','-depsc');
figure(2);
print('plots/knn-runningTimeVsKVSN-G2M2-dpi200.eps','-depsc');
figure(3);
print('plots/knn-runningTimeVsKVSN-G2M2-dpi300.eps','-depsc');
figure(4);
legend('100 DPI','200 DPI','300 DPI','O(N) reference',...
    'Location','NorthWest');
print('plots/knn-runningTimeVsNVsDPI-G2M2.eps','-depsc');
close all;
%% Person dependent Accuracy vs. sigma and k
testPerson='G2M2';
%Import all sigma-k data into D
[sigma,k,Accuracy,Kappa,AccuracySD,KappaSD] = ...
    importCVSigK(...
    ['../data/knnPersonDependentCV-',testPerson,...
    'dpi100-rep1-results.csv']);
D_pd{1}=[sigma,k,Accuracy,Kappa,AccuracySD,KappaSD];
[sigma,k,Accuracy,Kappa,AccuracySD,KappaSD] = ...
    importCVSigK(...
    ['../data/knnPersonDependentCV-',testPerson,...
    'dpi200-rep1-results.csv']);
D_pd{2}=[sigma,k,Accuracy,Kappa,AccuracySD,KappaSD];
[sigma,k,Accuracy,Kappa,AccuracySD,KappaSD] = ...
    importCVSigK(...
    ['../data/knnPersonDependentCV-',testPerson,...
    'dpi300-rep1-results.csv']);
D_pd{3}=[sigma,k,Accuracy,Kappa,AccuracySD,KappaSD];

clear sigma k Accuracy Kappa AccuracySD KappaSD;



for it = 1:3
    [Y,idx] = max(D_pd{it}(:,3));
    best_acc(it)=D_pd{it}(idx,3);
    best_sigma(it)=D_pd{it}(idx,1);
    best_k(it)=D_pd{it}(idx,2);
end



% Make 3 heatmaps of sigma-vs-k accuracy
for it = 1:3
    clear Z
    figure(it);
    DPI=100*it;
    sigma_list = unique(D_pd{it}(:,1));
    k_list = unique(D_pd{it}(:,2));
    for x=1:length(sigma_list)
        for y=1:length(k_list)
            Z(y,x)=D_pd{it}((x-1)*length(k_list)+y,3);
        end
    end
    contourf(sigma_list,k_list,Z);
    text(best_sigma(it)+0.05,best_k(it)+0.2,num2str(best_acc(it)));
    hold on;
    scatter(best_sigma(it),best_k(it));
    hold off;
    xlabel('\sigma');
    ylabel('k');
    grid on;
    colorbar;
    colormap('jet');
    caxis([min(D_pd{1}(:,3)),1]);
    title({['Accuracy vs. \sigma and k, ',...
        sprintf('%d DPI on ',DPI),testPerson,...
        ','],'10-fold cross validation'});
    set(gca,'FontSize',9);
    print(['plots/knn-AccVsKVsSigma-',testPerson,...
        '-dpi',num2str(it),'00-cv10.eps'],'-depsc');
end

clear it k_list sigma_list DPI x y Z idx

%% PCA at 100 DPI chosen pixel density
chosen_dpi_idx=1;
chosen_dpi=100*chosen_dpi_idx;
pcasdev=csvread(['../data/pca-All-sdev-dpi'...
    ,num2str(chosen_dpi),'-sigma',num2str(best_sigma(chosen_dpi_idx)),'.csv'],1,0);
pcavar=pcasdev.^2;
pcacumvar=cumsum(pcavar/sum(pcavar));
figure(4);
plot(1:length(pcacumvar),pcacumvar,'.');
ylim([0 1]);
xlim([0 length(pcacumvar)]);
grid on;
grid minor;
set(gca,'XTick',0:20:length(pcacumvar));
xlabel('Number of principal components');
ylabel('Proportion of total variance explained');
title(['PCA on dataset All, LOO, DPI=',num2str(chosen_dpi)...
    ,', \sigma=',num2str(best_sigma(chosen_dpi_idx))]);
%set(gca,'FontSize',9);
print(['plots/pca-All-cumvar-dpi',num2str(chosen_dpi),...
    '-sigma',num2str(best_sigma(chosen_dpi_idx)),'.eps'],'-depsc');



%% k-NN parameter optimization
knndataFewer=csvread(['../data/pcaknnFewerLOOCV--'...
    ,'dpi',num2str(chosen_dpi),'-sig',num2str(best_sigma(chosen_dpi_idx))...
    ,'-rep1-results.csv'],1,0);
figure(5);
%plot(knndataFewer(:,1),knndataFewer(:,2),'.');
%ylim([0 1]);

bar(knndataFewer(:,1),knndataFewer(:,2),'FaceColor',[0.5 0.5 0.5]);
hold on;
errorbar(knndataFewer(:,1),knndataFewer(:,2),knndataFewer(:,4),'k','linestyle','none');
hold off;
ylim([0 1]);
xlim([0 knndataFewer(end,1)+1]);
grid on;
grid minor;

ylabel('Overall accuracy');
xlabel('Number of neighbours');
title({'k-NN accuracy vs. k, with std. devs.,',['dataset Fewer, LOO, DPI='...
    ,num2str(chosen_dpi),', \sigma=',num2str(best_sigma(chosen_dpi_idx))]});
print(['plots/pca-knn-acc-vs-k-dpi',num2str(chosen_dpi),...
    '-sigma',num2str(best_sigma(chosen_dpi_idx)),'.eps'],'-depsc');


%% SVM parameter optimization
svmPolydataFewer=csvread(['../data/pcasvmPolyFewerLOOCV-'...
    ,'thresh0.95-dpi',num2str(chosen_dpi),'sig',num2str(best_sigma(chosen_dpi_idx))...
    ,'-rep1-results.csv'],1,0);
figure(6);
bar(svmPolydataFewer(:,3),svmPolydataFewer(:,5),'FaceColor',[0.5 0.5 0.5]);
hold on;
errorbar(svmPolydataFewer(:,3),svmPolydataFewer(:,5),svmPolydataFewer(:,6)...
    ,'k','linestyle','none');
hold off;
grid on;
grid minor;
xlabel('C');
ylabel('Overall accuracy');
ylim([0 1]);
title({'SVM accuracy vs. C, with std. devs.,',['with degree=2, scale=0.1,'...
    'DPI=',num2str(chosen_dpi),', \sigma=',num2str(best_sigma(chosen_dpi_idx))]});
print(['plots/pca-svm-acc-vs-C-dpi',num2str(chosen_dpi),'-sigma',...
    num2str(best_sigma(chosen_dpi_idx)),'.eps'],'-depsc');

%% Single person, individual
singlePerson=csvread(['../data/singlePersonCV-'...
    ,'dpi',num2str(chosen_dpi),'-sigma',num2str(best_sigma(chosen_dpi_idx))...
    ,'-k5-degree2-scale0.1-C0.5.csv'],1,0);
figure(7);
xbar=(1:length(singlePerson))';
bars=[singlePerson(:,1),singlePerson(:,3)];
errorbars=[singlePerson(:,2),singlePerson(:,4)];
h = bar([xbar,xbar],bars);
set(h,'BarWidth',1);
hold on;
groupwidth=min(0.8,size(bars,2)/(size(bars,2)+1.5));
for it=1:size(bars,2)
    x = xbar' - groupwidth/2 + (2*it-1) * groupwidth / (2*size(bars,2));
    errorbar(x,...
        bars(:,it), errorbars(:,it),...
        errorbars(:,it),'k', 'linestyle', 'none');
end
hold off;
ylim([0 1]);
xlim([0 length(singlePerson)+1]);
grid on;
grid minor;
ylabel('Overall accuracy');
xlabel('Person');
h = gca;
h.XTick=xbar;
h.XTickLabel=...
[...
    ' G1M1';' G1M2';...
    ' G2M1';' G2M2';...
    ' G3M1';' G3M2';...
    ' G4M1';' G4M2';' G4M3';...
    ' G5M1';' G5M2';' G5M3';...
    ' G6M1';...
    ' G7M1';...
    ' G8M1';...
    'G10M1';'G10M2';...
    'G11M1';'G11M2';'G11M3';...
    'G13M1';...
    'G14M1';'G14M2'...
    ];
h.XTickLabelRotation=70;
title({'Single person accuracy on own dataset,',...
    'with std. devs., 10-fold cross validation'});
legend('k-NN (k=5)','SVM (degree=2, scale=0.1, C=0.5)','Location','East');
print(['plots/singlePersonIndividual-dpi',num2str(chosen_dpi),'-sigma',...
    num2str(best_sigma(chosen_dpi_idx)),'.eps'],'-depsc');

%% Plot 3 problems in one
singlePersonsAll=csvread(['../data/singlePersonAllCV-dpi',...
    num2str(chosen_dpi),'-sigma',num2str(best_sigma(chosen_dpi_idx)),...
    '-k5-degree2-scale0.1-C0.5.csv'],1,0);
allMixed=csvread(['../data/AllMixedCV-dpi100-sigma1-k5-degree2-scale0.1-C0.5.csv'],1,0);
allLOO=csvread(['../data/AllLOOCV-dpi100-sigma1-k5-degree2-scale0.1-C0.5.csv'],1,0);


singlePersonsAll(3:4)=singlePersonsAll(3:4)/sqrt(length(singlePerson));


figure(8);
xbar=(1:3)';
bars=[singlePersonsAll(1:2)',[allMixed(1);allMixed(3)],[allLOO(1);allLOO(3)]]';
errorbars=[singlePersonsAll(3:4)',[allMixed(2);allMixed(4)],[allLOO(2);allLOO(4)]]';
h = bar([xbar,xbar],bars);
set(h,'BarWidth',1);
hold on;
groupwidth=min(0.8,size(bars,2)/(size(bars,2)+1.5));
for it=1:size(bars,2)
    x = xbar' - groupwidth/2 + (2*it-1) * groupwidth / (2*size(bars,2));
    errorbar(x,...
        bars(:,it), errorbars(:,it),...
        errorbars(:,it),'k', 'linestyle', 'none');
end
hold off;
ylim([0 1]);
grid on;
grid minor;
ylabel('Overall accuracy');

h=gca;
h.XTickLabel=['Single persons';'  All mixed   ';'    All LOO   '];
legend('k-NN (k=5)','SVM (degree=2, scale=0.1, C=0.5)','Location','West');
title({'k-NN and SVM accuracy, with std. devs.'});

print(['plots/knn-vs-svm-full-dpi',num2str(chosen_dpi),'-sigma',...
    num2str(best_sigma(chosen_dpi_idx)),'.eps'],'-depsc');


h1=figure(8);
figure(9);
close 9;
h2=figure(9);
objects=allchild(h1);
copyobj(get(h1,'children'),h2);
ylim([0.75 1]);
title('k-NN and SVM accuracy, with std. devs., zoomed');
print(['plots/knn-vs-svm-zoomed-dpi',num2str(chosen_dpi),'-sigma',...
    num2str(best_sigma(chosen_dpi_idx)),'.eps'],'-depsc');

%% Test for equality of means
format long;
alpha=0.05;
singlePersonMean=singlePersonsAll(1)-singlePersonsAll(2);
n=1;%length(singlePerson)*10;
singlePersonSD=sqrt((singlePersonsAll(3)^2)/n+(singlePersonsAll(4)^2)/n);
[spH,spP,spCI] = ztest(singlePersonMean,0,singlePersonSD,'alpha',alpha)
%H=0 indicates that the null hypothesis ("mean is M")
%cannot be rejected at the 5% significance level.  H=1
%indicates that the null hypothesis can be rejected at the 5% level.

allMixedMean=allMixed(1)-allMixed(3);
n=1;%10*(length(singlePerson));
allMixedSD=sqrt((allMixed(2)^2)/n+(allMixed(4)^2)/n);
[amH,amP,amCI] = ztest(allMixedMean,0,allMixedSD,'alpha',alpha)

allLOOMean=allLOO(1)-allLOO(3);
n=1;%length(singlePerson);
allLOOSD=sqrt((allLOO(2)^2)/n+(allLOO(4)^2)/n);
[alH,alP,alCI] = ztest(allLOOMean,0,allLOOSD,'alpha',alpha)